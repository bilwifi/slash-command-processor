name: start-pull-request
on:
  repository_dispatch:
    types: [start-pr-command]
jobs:
  startPullRequest:
    runs-on: ubuntu-latest
    steps:
      - name: Récuperer le nom de la branche cible
        id: vars
        run: |
          branch=${{ github.event.client_payload.slash_command.args.named.branch }}
          if [[ -z "$branch" ]]; then branch="main"; fi
          echo "branch=$branch" >> $GITHUB_OUTPUT
      - name: Récuperer le nom de la branche courante à partir du titre
        id: get-current-branch
        run: |
              branch=$(echo "${{github.event.client_payload.github.payload.issue.title }}" | cut -d: -f1 | cut -d"(" -f2 | cut -d")" -f1)
              echo "branch=$branch" >> $GITHUB_OUTPUT
        #uses: actions-ecosystem/action-regex-match@v2
        #id: regex-match
        #with:
          #text: ${{ github.event.client_payload.github.payload.issue.title }}
          #regex: '==(.*?)=='
      
      # if: ${{ steps.regex-match.outputs.match != '' }}
      - name: Fetch de la branche
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT }}
          repository: ${{ github.event.client_payload.github.payload.repository.full_name }}
          ref: ${{steps.get-current-branch.outputs.branch}}
      - name: Créer un pull request
        uses: repo-sync/pull-request@v2
        with:
          source_branch : ${{ steps.get-current-branch.outputs.branch }}
          destination_branch: ${{ steps.vars.outputs.branch }}
          github_token: ${{ secrets.PAT }}
          pr_title: "Pulling ${{ steps.get-current-branch.outputs.branch }} into ${{ steps.vars.outputs.branch}}"
          pr_body: ${{ github.event.client_payload.github.payload.issue.body }}
          
      - name: Commentaire feedback
        uses: peter-evans/create-or-update-comment@v2
        with:
          token: ${{ secrets.PAT }}
          repository: ${{ github.event.client_payload.github.payload.repository.full_name }}
          comment-id: ${{ github.event.client_payload.github.payload.comment.id }}
          reaction-type: hooray
          body: |
              > @${{ github.event.issue.user.login }}! 
              > le [PR #${{steps.open-pr.outputs.pr_number}}](${{steps.open-pr.outputs.pr_url}}) a été créer avec succès : (${{steps.open-pr.outputs.pr_url}})
              > l'Issue sera close automatiquement lorsque le PR sera approuvé
